# CLEXCELLENT

The C-Language extended: In an excellent way

Syntax example:
```c
#include <stdio.h>

struct MyStruct {
	int a;
	int b;
	struct MyStruct new(int a, int b) {
		return MyStruct {
			.a = a,
			.b = b,
		};
	}

	int sum(self) {
		return a + b;
	}

	int double(self*) {
		a = 2 * self->a;
		b = 2 * self->b;
	}
}

int sum(int a, int b) { return a + b; }

#undef my_fun

extern int my_fun(); // Works, due to it *not* being mangled

namespace cl {
	int sum(int a, int b);
}

// extern int sum(int a, int b); Will not work - items in namespaces *are* mangled

int main(int argc, char** argv) {
	int a = 20;
	int b = 200;
	struct MyStruct mine = MyStruct::new(a, b);
	printf("Struct method: %d, Namespaced method %d, Normal method %d\n", mine.sum(), cl::sum(a, b), sum(a, b));
	printf("Doubling...\n");
	mine->double(); // Using -> on a struct automatically references it and tries to call the method that takes in a self*
	printf("New sum: %d", mine.sum());
	return 0;
}
```
